server:
  port: 8080
  servlet:
    context-path: /api/v1
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: career-os-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:career_os}
    username: ${DB_USERNAME:career_os_user}
    password: ${DB_PASSWORD:career_os_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
    consumer:
      group-id: career-os-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.careeros.dto"
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:career-os-super-secret-key-change-in-production}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

# AI Integration
ai:
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: gpt-4-turbo-preview
    max-tokens: 2000
    temperature: 0.7
  
  resume:
    analyzer:
      enabled: true
      ats-scoring:
        enabled: true
        threshold: 75

# File Storage
storage:
  type: ${STORAGE_TYPE:local} # local, s3, azure
  local:
    upload-dir: ${UPLOAD_DIR:./uploads}
  s3:
    bucket: ${S3_BUCKET:}
    region: ${AWS_REGION:us-east-1}

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.careeros: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/career-os.log

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: true

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  jpa:
    show-sql: true
  
  h2:
    console:
      enabled: true
      path: /h2-console

logging:
  level:
    com.careeros: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false
  
  datasource:
    hikari:
      maximum-pool-size: 50

logging:
  level:
    com.careeros: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
